{
	"info": {
		"_postman_id": "08469c11-e405-4d0e-99f7-d92cab2dceee",
		"name": "Calculator",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32171283"
	},
	"item": [
		{
			"name": "/api/v1/calculate",
			"item": [
				{
					"name": "errors",
					"item": [
						{
							"name": "validation",
							"item": [
								{
									"name": "ErrNullExpression",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response status code is 422\", function () {",
													"    pm.response.to.have.status(422);",
													"});",
													"",
													"pm.test(\"Response body has the required field 'error'\", function () {",
													"    const responseData = pm.response.json();",
													"    ",
													"    pm.expect(responseData).to.have.property('error');",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"expression\": null\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{API_BASE_URL}}/api/v1/calculate",
											"host": [
												"{{API_BASE_URL}}"
											],
											"path": [
												"api",
												"v1",
												"calculate"
											]
										}
									},
									"response": []
								},
								{
									"name": "ErrEmptyExpression",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response status code is 422\", function () {",
													"    pm.response.to.have.status(422);",
													"});",
													"",
													"pm.test(\"Response body has the required field 'error'\", function () {",
													"    const responseData = pm.response.json();",
													"    ",
													"    pm.expect(responseData).to.have.property('error');",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"expression\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{API_BASE_URL}}/api/v1/calculate",
											"host": [
												"{{API_BASE_URL}}"
											],
											"path": [
												"api",
												"v1",
												"calculate"
											]
										}
									},
									"response": []
								},
								{
									"name": "ErrInvalidCharacter",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response status code is 422\", function () {",
													"    pm.response.to.have.status(422);",
													"});",
													"",
													"pm.test(\"Response body has the required field 'error'\", function () {",
													"    const responseData = pm.response.json();",
													"    ",
													"    pm.expect(responseData).to.have.property('error');",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"expression\": \"a + b\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{API_BASE_URL}}/api/v1/calculate",
											"host": [
												"{{API_BASE_URL}}"
											],
											"path": [
												"api",
												"v1",
												"calculate"
											]
										}
									},
									"response": []
								},
								{
									"name": "ErrDivisionByZero",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response status code is 422\", function () {",
													"    pm.response.to.have.status(422);",
													"});",
													"",
													"pm.test(\"Response body has the required field 'error'\", function () {",
													"    const responseData = pm.response.json();",
													"    ",
													"    pm.expect(responseData).to.have.property('error');",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"expression\": \"12/0\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{API_BASE_URL}}/api/v1/calculate",
											"host": [
												"{{API_BASE_URL}}"
											],
											"path": [
												"api",
												"v1",
												"calculate"
											]
										}
									},
									"response": []
								},
								{
									"name": "ErrUnexpectedEnd",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response status code is 422\", function () {",
													"    pm.response.to.have.status(422);",
													"});",
													"",
													"pm.test(\"Response body has the required field 'error'\", function () {",
													"    const responseData = pm.response.json();",
													"    ",
													"    pm.expect(responseData).to.have.property('error');",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"expression\": \"12 +\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{API_BASE_URL}}/api/v1/calculate",
											"host": [
												"{{API_BASE_URL}}"
											],
											"path": [
												"api",
												"v1",
												"calculate"
											]
										}
									},
									"response": []
								},
								{
									"name": "ErrMissingClosingParenthesis",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response status code is 422\", function () {",
													"    pm.response.to.have.status(422);",
													"});",
													"",
													"pm.test(\"Response body has the required field 'error'\", function () {",
													"    const responseData = pm.response.json();",
													"    ",
													"    pm.expect(responseData).to.have.property('error');",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"expression\": \"(12 + 2\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{API_BASE_URL}}/api/v1/calculate",
											"host": [
												"{{API_BASE_URL}}"
											],
											"path": [
												"api",
												"v1",
												"calculate"
											]
										}
									},
									"response": []
								},
								{
									"name": "ErrInvalidNumber",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response status code is 422\", function () {",
													"    pm.response.to.have.status(422);",
													"});",
													"",
													"pm.test(\"Response body has the required field 'error'\", function () {",
													"    const responseData = pm.response.json();",
													"    ",
													"    pm.expect(responseData).to.have.property('error');",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"expression\": \"0..2 + 0.2\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{API_BASE_URL}}/api/v1/calculate",
											"host": [
												"{{API_BASE_URL}}"
											],
											"path": [
												"api",
												"v1",
												"calculate"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "ErrInvalidRequest",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Response body has the required field 'error'\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData).to.have.property('error');",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{API_BASE_URL}}/api/v1/calculate",
									"host": [
										"{{API_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"calculate"
									]
								}
							},
							"response": []
						},
						{
							"name": "ErrInvalidRequestMethod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status code is 405\", function () {",
											"    pm.response.to.have.status(405);",
											"});",
											"",
											"pm.test(\"Response body has the required field 'error'\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData).to.have.property('error');",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API_BASE_URL}}/api/v1/calculate",
									"host": [
										"{{API_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"calculate"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "2 + 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response is an object with result property\", function () {",
									"    pm.expect(pm.response.json()).to.be.an('object').that.has.property('result');",
									"});",
									"",
									"pm.test(\"Result equals 4\", function () {",
									"    pm.expect(pm.response.json().result).to.equal(4);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"expression\": \"2 + 2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_BASE_URL}}/api/v1/calculate",
							"host": [
								"{{API_BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"calculate"
							]
						}
					},
					"response": []
				},
				{
					"name": "(2 + 2) * 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response is an object with result property\", function () {",
									"    pm.expect(pm.response.json()).to.be.an('object').that.has.property('result');",
									"});",
									"",
									"pm.test(\"Result equals 8\", function () {",
									"    pm.expect(pm.response.json().result).to.equal(8);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"expression\": \"(2 + 2) * 2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_BASE_URL}}/api/v1/calculate",
							"host": [
								"{{API_BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"calculate"
							]
						}
					},
					"response": []
				},
				{
					"name": "2 + 2 * 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response is an object with result property\", function () {",
									"    pm.expect(pm.response.json()).to.be.an('object').that.has.property('result');",
									"});",
									"",
									"pm.test(\"Result equals 6\", function () {",
									"    pm.expect(pm.response.json().result).to.equal(6);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"expression\": \"2 + 2 * 2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_BASE_URL}}/api/v1/calculate",
							"host": [
								"{{API_BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"calculate"
							]
						}
					},
					"response": []
				},
				{
					"name": "1 / 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response is an object with result property\", function () {",
									"    pm.expect(pm.response.json()).to.be.an('object').that.has.property('result');",
									"});",
									"",
									"pm.test(\"Result equals 0.5\", function () {",
									"    pm.expect(pm.response.json().result).to.equal(0.5);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"expression\": \"1 / 2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_BASE_URL}}/api/v1/calculate",
							"host": [
								"{{API_BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"calculate"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "API_BASE_URL",
			"value": "http://localhost:8080",
			"type": "string"
		}
	]
}